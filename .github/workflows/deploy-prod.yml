name: deploy-prod

on:
  push:
    branches:
      - production

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Copy Environment Configuration
        env:
          ENV_PROD: ${{ secrets.ENV_PROD }}
        run: |
          echo "$ENV_PROD" > .deploy/prod/.env

      - name: Deploy with Docker Compose
        env:
          REMOTE_HOST_PROD: ${{ secrets.REMOTE_HOST_PROD }}
          REMOTE_USER_PROD: ${{ secrets.REMOTE_USER_PROD }}
          SSH_PORT_PROD: ${{ secrets.SSH_PORT_PROD }}
          SSH_PRIVATE_KEY_PROD: ${{ secrets.SSH_PRIVATE_KEY_PROD }}
        run: |
          mkdir -p ~/.ssh
          echo "$SSH_PRIVATE_KEY_PROD" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -p $SSH_PORT_PROD $REMOTE_HOST_PROD >> ~/.ssh/known_hosts
          export DOCKER_HOST="ssh://$REMOTE_USER_PROD@$REMOTE_HOST_PROD:$SSH_PORT_PROD"

          docker compose -f .deploy/prod/docker-compose.yml pull
          docker compose -f .deploy/prod/docker-compose.yml down
          docker compose -f .deploy/prod/docker-compose.yml up -d
          docker image prune -f  # clean up none image after built

# jobs:
#   terraform:
#     runs-on: ubuntu-latest
#     environment: development

#     steps:
#       - name: Checkout Repository
#         uses: actions/checkout@v3

#       - name: Setup Terraform
#         uses: hashicorp/setup-terraform@v2
#         with:
#           terraform_wrapper: false

#       - name: Init teraform
#         run: |
#           cd .deploy/dev
#           terraform init

#       - name: Plan Terraform Changes
#         env:
#           TF_VAR_server_ip: ${{ secrets.SSH_HOST }}
#           TF_VAR_ssh_user: ${{ secrets.SSH_USER }}
#           TF_VAR_ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
#           TF_VAR_ssh_port: ${{ secrets.SSH_PORT }}
#         run: |
#           cd .deploy/dev
#           terraform plan

#       - name: Apply Terraform Changes
#         env:
#           TF_VAR_server_ip: ${{ secrets.SSH_HOST }}
#           TF_VAR_ssh_user: ${{ secrets.SSH_USER }}
#           TF_VAR_ssh_private_key: ${{ secrets.SSH_PRIVATE_KEY }}
#           TF_VAR_ssh_port: ${{ secrets.SSH_PORT }}
#         run: |
#           cd .deploy/dev
#           terraform apply -auto-approve
